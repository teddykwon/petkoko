{"version":3,"file":"static/webpack/static/development/pages/_app.js.403535f23ea2daa8c66a.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js","webpack:///./pages/_app/index.tsx"],"sourcesContent":["import _Object$assign from \"../../core-js/object/assign\";\nexport default function _extends() {\n  _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","// #region Global Imports\nimport * as React from \"react\";\nimport App, { AppInitialProps, AppContext } from \"next/app\";\nimport { Provider } from \"react-redux\";\nimport { ThemeProvider } from \"styled-components\";\nimport withRedux from \"next-redux-wrapper\";\nimport { Head } from \"next/document\";\n// #endregion Global Imports\n\n// #region Local Imports\nimport { theme } from \"@Definitions/Styled\";\nimport { AppWithStore } from \"@Interfaces\";\nimport { makeStore } from \"@Redux\";\n\nimport \"@Static/css/reset.scss\";\n// #endregion Local Imports\n\nclass WebApp extends App<AppWithStore> {\n    static async getInitialProps({\n        Component,\n        ctx,\n    }: AppContext): Promise<AppInitialProps> {\n        let pageProps = {};\n\n        // tell the client if the initial props still need to be fetched\n        let clientNeedsProps;\n\n        // check if we are inside a server-side export\n        const isExport = (!process.browser && !(ctx && ctx.req && ctx.req.headers));\n\n        if (isExport) {\n            // inside an export, the client needs props\n            // iff .getInitialProps is defined\n            clientNeedsProps = !!Component.getInitialProps;\n        } else {\n            // if not in an export, fetch props as normally\n            if (Component.getInitialProps)\n                pageProps = await Component.getInitialProps(ctx);\n            // and tell the client that it got all the props it needed\n            clientNeedsProps = false;\n        }\n\n        return { pageProps, clientNeedsProps };\n    }\n\n    render() {\n        const { Component, pageProps, store } = this.props;\n\n        return (\n            <Provider store={store}>\n                <ThemeProvider theme={theme}>\n                    <Component {...pageProps} />\n                </ThemeProvider>\n            </Provider>\n        );\n    }\n}\n\nexport default withRedux(makeStore)(WebApp);\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;;;;;;;;;;;;;AA4BA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;AApCA;AAGA;AACA;AAIA;AACA;AACA;AACA;;;;;AACA;AACA;AACA;;;;;AAGA;;;;;;AACA;AACA;;AADA;AACA;;AAAA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AA1BA;AACA;AAwCA;;;;A","sourceRoot":""}