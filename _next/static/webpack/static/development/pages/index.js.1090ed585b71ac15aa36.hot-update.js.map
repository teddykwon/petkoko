{"version":3,"file":"static/webpack/static/development/pages/index.js.1090ed585b71ac15aa36.hot-update.js","sources":["webpack:///./pages/index/index.tsx"],"sourcesContent":["// #region Global Imports\nimport * as React from \"react\";\nimport { NextPage } from \"next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Head from \"next/head\";\n// @ts-ignore\nimport MagicGrid from \"react-magic-grid\";\n// #endregion Global Imports\n\n// #region Local Imports\nimport {\n    Container,\n    Top,\n    TopText,\n    Middle,\n    MiddleLeft,\n    MiddleLeftButtons,\n    MiddleRight,\n    FeedBoxs,\n} from \"@Styled/Home\";\nimport { IStore } from \"@Redux/IStore\";\nimport { HomeActions } from \"@Actions\";\nimport { HashTagButton, Feed } from \"@Components\";\n// #endregion Local Imports\n\n// #region Interface Imports\nimport { IHomePage, ReduxNextPageContext } from \"@Interfaces\";\n// #endregion Interface Imports\n\nconst Home: NextPage<IHomePage.IProps, IHomePage.InitialProps> = ({}) => {\n    const home = useSelector((state: IStore) => state.home);\n    const dispatch = useDispatch();\n\n    const renderHashTagButtons = (activeTag: String) =>\n        home.hashTags.map(tag => (\n            <HashTagButton\n                key={tag}\n                tag={tag}\n                isActive={activeTag === tag}\n                onClick={() => dispatch(HomeActions.GetPost({ key: tag }))}\n            />\n        ));\n\n    const renderFeeds = () =>\n        home.posts.map((feed, i) => (\n            <Feed\n                key={i}\n                vendorType={feed.vendorType}\n                tags={feed.tags}\n                title={feed.title}\n                postedAt=\"2020.02.02\"\n                author={{\n                    name: feed.author.name,\n                    profileImgUrl: feed.author.profileImageUrl,\n                }}\n                content={{\n                    thumbnailUrl: feed.content.thumbnailImageUrl,\n                    originUrl: feed.content.originUrl,\n                    link: feed.content.link,\n                    type: feed.content.type,\n                }}\n            />\n        ));\n\n    return (\n        <Container>\n            <Head>\n                <title>PetKoKo</title>\n            </Head>\n            <Top />\n            <Middle>\n                <MiddleLeft>\n                    <MiddleLeftButtons>\n                        {renderHashTagButtons(home.activeTag)}\n                    </MiddleLeftButtons>\n                </MiddleLeft>\n                <MiddleRight>\n                    <TopText>#{home.activeTag}</TopText>\n                    <MagicGrid items={home.posts.length} gutter={16} maxColumns={4}>\n                        {renderFeeds()}\n                    </MagicGrid>\n                    {/*<FeedBoxs>{renderFeeds()}</FeedBoxs>*/}\n                </MiddleRight>\n            </Middle>\n        </Container>\n    );\n};\n\nHome.getInitialProps = async (\n    ctx: ReduxNextPageContext\n): Promise<IHomePage.InitialProps> => {\n    await ctx.store.dispatch(await HomeActions.GetHashTag({ key: \"koko\" }));\n    await ctx.store.dispatch(\n        await HomeActions.GetPost({ key: ctx.store.getState().home.activeTag })\n    );\n    return {};\n};\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAWA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AACA;AASA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AACA;AAoBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;;;;A","sourceRoot":""}