{"version":3,"sources":["@types/redux/actions.ts","config/constants/api.ts","config/initializers/axios.ts","services/apis/interceptor/response401.ts","reduxs/middlewares/index.ts","reduxs/reducers/postReducer.ts","reduxs/reducers/mainReducer.ts","reduxs/reducers/index.ts","reduxs/actions/postAction.ts","services/apis/request/request.ts","services/apis/postApi.ts","reduxs/sagas/postSaga.ts","reduxs/sagas/index.ts","config/constants/routeUrls.ts","components/layout/Logo.tsx","components/layout/Lnb.tsx","components/layout/Gnb.tsx","containers/layout/BaseLayout.tsx","components/post/Profile.tsx","components/post/Post.tsx","components/arrow/Arrow.tsx","containers/home/Home.tsx","components/close/Close.tsx","containers/discover/Discover.tsx","routes.tsx","config/initializers/store.ts","App.tsx","index.tsx","config/env/index.ts","components/layout/svg/logo.svg","components/arrow/svg/ic-arrow-previous.svg","components/arrow/svg/ic-arrow-next.svg","components/close/svg/ic-x.svg","config/env sync /^/.//.*$"],"names":["ActionType","REQUEST_TIMEOUT","env","NODE_ENV","isDevelopment","axiosInstance","axios","create","baseURL","concat","BASE_API_URL","timeout","withCredentials","ApiInterceptor","Object","classCallCheck","this","createClass","key","value","onFulfilled","onRejected","interceptors","request","use","response","addResponse","config","error","status","Promise","reject","sagaMiddleware","createSagaMiddleware","middlewares","initialState","posts","currentPosition","isPostOpen","postReducer","state","arguments","length","undefined","action","type","GET_POST","objectSpread2","SET_POST","POST_POSITION_CHANGE","position","CHANGE_DISCOVER_POST_OPEN_STATE","mainReducer","root","storage","whitelist","main","post","rootReducer","combineReducers","mainState","persistReducer","postState","getPostList","hashTag","changePostPosition","ERROR_CODE","ERROR_MESSAGES","_ERROR_MESSAGES","defineProperty","UNKNOWN_ERROR","BAD_CONNECTION","_x","_request","apply","_callee","_ref","url","_ref$method","method","_ref$contentType","contentType","_ref$data","data","_ref2","_error$response","_data","message","regenerator_default","a","wrap","_context","prev","next","JSON","stringify","params","test","headers","Accept","Content-Type","sent","success","abrupt","content","code","t0","stop","searchPostApi","asyncToGenerator","mark","watchRootSaga","call","put","_marked","_context2","all","takeLatest","_marked2","RootSaga","fork","postSaga","sagas_marked","ERouteUrl","Logo","_ref$width","width","_ref$height","height","react_default","createElement","Fragment","src","LogoIconUrl","Lnb","react","className","react_router_dom","to","HOME","exact","activeClassName","DISCOVER","React","Gnb","_React$Component","possibleConstructorReturn","getPrototypeOf","inherits","layout_Logo","components_layout_Lnb","Component","BaseLayout","components_layout_Gnb","props","children","Profile","_this$props","author","vendorType","profileImageUrl","name","PostImage","styled","div","_templateObject","backgroundImage","Post","_this","handleOnClick","onClick","onLoadImage","setState","onLoad","postType","title","thumbnailImageUrl","alt","Profile_Profile","Arrow","_this$props$className","_this$props$hide","hide","PrevIconUrl","NextIconUrl","Home","Post_Post","Arrow_Arrow","mapDispatchToProps","connect","Close","CloseIconUrl","breakpointColumn","default","1200","1000","794","breakpointColumnOpen","Discover","changeDiscoverPostOpenState","_this$props2","react_masonry_css_es5_default","breakpointCols","columnClassName","map","it","i","postClick","Close_Close","postClose","Routes","react_router","containers_layout_BaseLayout","path","component","composeEnhancers","composeWithDevTools","store","createStore","reducers","applyMiddleware","toConsumableArray","run","sagas","persistor","persistStore","configureStore","App","es","integration_react","routes","ReactDOM","render","src_App","document","getElementById","PROFILE","console","log","process","staticFile","require","__webpack_exports__","_Users_dalbang_Develop_git_koko_koko_front_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","getValue","DEVELOPMENT","isProduction","PRODUCTION","DEVELOP","ASSET_URL","PUBLIC_URL","module","exports","__webpack_require__","p","./","./develop","./develop.json","./index","./index.ts","./local","./local.json","./production","./production.json","webpackContext","req","id","webpackContextResolve","o","e","Error","keys","resolve"],"mappings":"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","file":"locals/js/main.ac6c4383.chunk.js","sourcesContent":["import Posts from \"@Types/model/Posts\";\n\nexport enum ActionType {\n  GET_POST = \"GET_POST\",\n  SET_POST = \"SET_POST\",\n  POST_POSITION_CHANGE = \"POST_POSITION_CHANGE\",\n  CHANGE_DISCOVER_POST_OPEN_STATE = \"CHANGE_DISCOVER_POST_OPEN_STATE\"\n}\n\nexport interface GetPostAction {\n  type: ActionType.GET_POST;\n  hashTag: string;\n}\n\nexport interface SetPostAction {\n  type: ActionType.SET_POST;\n  posts: Posts[];\n}\n\nexport interface PostPositionChangeAction {\n  type: ActionType.POST_POSITION_CHANGE,\n  position: number;\n}\n\nexport interface ChangeDiscoverPostOpenStateAction {\n  type: ActionType.CHANGE_DISCOVER_POST_OPEN_STATE,\n  isPostOpen: boolean;\n  position?: number;\n}\n\nexport type Action =\n  | GetPostAction\n  | SetPostAction\n  | PostPositionChangeAction\n  | ChangeDiscoverPostOpenStateAction\n","import env from \"../env/index\";\n\nexport const REQUEST_TIMEOUT = env.NODE_ENV.isDevelopment() ? 30000 : 3000;\n","/**\n * Universal(Isomorphic) Ajax Util\n * @see https://github.com/mzabriskie/axios\n */\nimport axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from \"axios\";\nimport env from \"../env\";\nimport { REQUEST_TIMEOUT } from \"../constants/api\";\n\nconst axiosInstance = axios.create({\n  baseURL: `${env.BASE_API_URL}`,\n  timeout: REQUEST_TIMEOUT,\n  withCredentials: true\n});\n\nexport class ApiInterceptor {\n  public static addRequest(\n    onFulfilled: (config: AxiosRequestConfig) => AxiosRequestConfig | Promise<AxiosRequestConfig>,\n    onRejected?: (error: AxiosError) => Promise<AxiosError> | void\n  ): number {\n    return axiosInstance.interceptors.request.use(onFulfilled, onRejected);\n  }\n\n  public static addResponse<T>(\n    onFulfilled: (response: AxiosResponse<T>) => AxiosResponse<T> | Promise<AxiosResponse<T>>,\n    onRejected?: (error: AxiosError) => Promise<AxiosError> | void\n  ): number {\n    return axiosInstance.interceptors.response.use(onFulfilled, onRejected);\n  }\n}\n\nexport default axiosInstance;\n","import { ApiInterceptor } from \"../../../config/initializers/axios\";\n\n/**\n * 권한없음\n * @see https://gist.github.com/yajra/5f5551649b20c8f668aec48549ef5c1f\n */\nexport const response401 = ApiInterceptor.addResponse(\n  config => config,\n  error => {\n    if (error.response && error.response.status === 401) {\n      // 로그인 페이지로 이동\n      // login();\n    } else {\n      return Promise.reject(error);\n    }\n  }\n);\n","import createSagaMiddleware from \"redux-saga\";\n\nexport const sagaMiddleware = createSagaMiddleware();\n\nexport default [\n  sagaMiddleware\n];\n","import {PostReducer, PostState} from \"@Types/reducers/Post\";\nimport {ActionType} from \"@Types/redux/actions\";\n\nconst initialState: PostState = {\n    posts: [],\n    currentPosition: 0,\n    isPostOpen: false\n};\n\nconst postReducer: PostReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionType.GET_POST:\n            return {\n                ...state\n            };\n        case ActionType.SET_POST:\n            return {\n                ...state,\n                posts: action.posts\n            };\n        case ActionType.POST_POSITION_CHANGE:\n            return {\n                ...state,\n                currentPosition: action.position\n            };\n        case ActionType.CHANGE_DISCOVER_POST_OPEN_STATE:\n            return {\n                ...state,\n                isPostOpen: action.isPostOpen,\n                currentPosition: action.position != null ? action.position : state.currentPosition\n            };\n        default:\n            return state;\n    }\n};\n\nexport default postReducer;","import { ActionType } from \"@Types/redux/actions\";\nimport { MainReducer } from \"@Types/reducers/Main\";\n\nconst initialState = {\n\n};\n\nconst mainReducer: MainReducer = (state = initialState, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};\n\nexport default mainReducer;\n","import { persistReducer } from \"redux-persist\";\nimport { combineReducers } from \"redux\";\nimport storage from \"redux-persist/lib/storage/session\";\nimport postReducer from \"@Redux/reducers/postReducer\";\nimport mainReducer from \"@Redux/reducers/mainReducer\";\n\n// Redux persist settings\nconst root = {\n  key: \"main\",\n  storage,\n  whitelist: []\n};\n\nconst main = {\n  key: \"main\",\n  storage,\n  whitelist: []\n};\n\nconst post = {\n  key: \"post\",\n  storage,\n  whitelist: []\n};\n\nconst rootReducer = combineReducers({\n  mainState: persistReducer(main, mainReducer),\n  postState: persistReducer(post, postReducer)\n});\n\nexport default persistReducer(root, rootReducer);\n","import {\n    ActionType,\n    ChangeDiscoverPostOpenStateAction,\n    GetPostAction,\n    PostPositionChangeAction,\n    SetPostAction\n} from \"@Types/redux/actions\";\nimport Posts from \"@Types/model/Posts\";\n\nexport function getPostList(hashTag: string): GetPostAction {\n    return {\n        type: ActionType.GET_POST,\n        hashTag\n    }\n}\n\nexport function setPostList(posts: Posts[]): SetPostAction {\n    return {\n        type: ActionType.SET_POST,\n        posts\n    }\n}\n\nexport function changePostPosition(position: number): PostPositionChangeAction {\n    return {\n        type: ActionType.POST_POSITION_CHANGE,\n        position\n    }\n}\n\nexport function changeDiscoverPostOpenState(isPostOpen: boolean, position?: number): ChangeDiscoverPostOpenStateAction {\n    return {\n        type: ActionType.CHANGE_DISCOVER_POST_OPEN_STATE,\n        isPostOpen,\n        position\n    }\n}\n","import axios from \"../../../config/initializers/axios\";\nimport { WebResponse } from \"@Types/WebResponse\";\n\nenum ERROR_CODE {\n  UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n  BAD_CONNECTION = \"BAD_CONNECTION\",\n}\n\nexport const ERROR_MESSAGES = {\n  [ERROR_CODE.UNKNOWN_ERROR]: \"알 수 없는 오류로 실패하였습니다.\",\n  [ERROR_CODE.BAD_CONNECTION]: \"네트워크 상태가 불안정합니다. 잠시 후 다시 시도해주십시오.\"\n};\n\nexport interface WebApiRequest {\n  url: string;\n  method?: \"GET\" | \"POST\" | \"DELETE\" | \"PUT\";\n  contentType?: string;\n  data?: any;\n}\n\nexport async function request({\n                                url,\n                                method = \"GET\",\n                                contentType = \"application/x-www-form-urlencoded\",\n                                data = {}\n                              }: WebApiRequest): Promise<WebResponse> {\n  try {\n    const isFileUpload = contentType === \"multipart/form-data\";\n\n    if (!isFileUpload && method === \"POST\") {\n      contentType = \"application/json\";\n      data = JSON.stringify(data);\n    }\n\n    const { data: response } = await axios.request({\n      url,\n      method,\n      params: /GET|DELETE/.test(method) ? data : \"\",\n      data: method === \"POST\" ? data : \"\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": contentType\n      }\n    });\n    if (response.success) {\n      return {\n        success: true,\n        content: response.content || null\n      }\n    } else {\n      return {\n        success: false,\n        content: response.content || null,\n        code: response.code || \"\",\n        message: response.message || \"\"\n      }\n    }\n\n  } catch (error) {\n    if (error.response) {\n      const { status, data } = error.response;\n      const message = status === 404 ? ERROR_MESSAGES[ERROR_CODE.BAD_CONNECTION] : data.message;\n      if (status === 401) {\n        // login();\n      }\n      if (/404|500/.test(status)) {\n        // errorReport(`ajax ${status} error: ${url}`, error);\n      }\n      return {\n        success: false,\n        content: null,\n        code: status,\n        message\n      };\n    }\n    return {\n      success: false,\n      content: null,\n      code: ERROR_CODE.UNKNOWN_ERROR,\n      message: ERROR_MESSAGES[ERROR_CODE.UNKNOWN_ERROR]\n    };\n  }\n}\n","import { request } from \"./request/request\";\nimport { WebResponse } from \"@Types/WebResponse\";\nimport Posts from \"@Types/model/Posts\";\n\ninterface SearchPostParams {\n    key: string; // koko\n    hashTag: string | null;\n}\n\ninterface SearchPostApi {\n    (params: SearchPostParams): Promise<WebResponse<Posts[]>>;\n}\n\nexport const searchPostApi: SearchPostApi = async ({ key, hashTag }): Promise<WebResponse<Posts[]>> => {\n    const response: WebResponse = await request({\n        url: \"/post\",\n        method: \"GET\",\n        data: { key, hashTag }\n    });\n    return response;\n};\n","import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { setPostList } from \"@Redux/actions/postAction\";\nimport { searchPostApi } from \"@Api/postApi\";\nimport { ActionType, GetPostAction } from \"@Types/redux/actions\";\n\nfunction* getPostList(action: GetPostAction) {\n    const response = yield call(() => searchPostApi({ key: \"koko\", hashTag: action.hashTag }));\n\n    yield put(setPostList(response.content));\n}\n\nexport default function* watchRootSaga() {\n    return yield all([\n        takeLatest(ActionType.GET_POST, getPostList)\n    ]);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport postSaga from \"./postSaga\";\n\nexport default function* RootSaga() {\n    yield all([\n        fork(postSaga),\n    ])\n}\n","export enum ERouteUrl {\n    HOME = \"/\",\n    DISCOVER = \"/discover\"\n}\n","import React from \"react\";\nimport LogoIconUrl from \"./svg/logo.svg\";\n\ninterface Props {\n  width?: number | string;\n  height?: number | string;\n}\n\nconst Logo: React.FunctionComponent<Props> =\n    ({width = \"auto\", height = \"auto\" }) => (\n        <React.Fragment>\n            <img src={LogoIconUrl} width={width} height={height} />\n        </React.Fragment>\n);\n\nexport default Logo;","import * as React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Lnb.less\";\nimport { ERouteUrl } from \"../../config/constants/routeUrls\";\n\ninterface Props {\n  \n}\n\ninterface States {}\n\nclass Lnb extends React.Component<Props, States> {\n  render() {\n    return (\n        <section className=\"lnb\">\n            <ul>\n                <li><NavLink to={ERouteUrl.HOME} exact={true} activeClassName={\"active\"}>Trending</NavLink></li>\n                <li><NavLink to={ERouteUrl.DISCOVER} exact={true} activeClassName={\"active\"}>Discover</NavLink></li>\n            </ul>\n        </section>\n    );\n  }\n}\n\n\nexport default Lnb;","import React from \"react\";\nimport Logo from \"./Logo\";\nimport \"./Gnb.less\";\nimport Lnb from \"@Components/layout/Lnb\";\n\nexport class Gnb extends React.Component<any, any> {\n    render() {\n        return (\n            <div className=\"gnb\">\n                <div className={\"logo\"}>\n                    <Logo />\n                </div>\n                <Lnb />\n            </div>\n        );\n    }\n}\n\nexport default Gnb;\n","import \"./BaseLayout.less\";\nimport * as React from \"react\";\nimport Gnb from \"@Components/layout/Gnb\";\n\ninterface Props {\n  children: JSX.Element[] | JSX.Element;\n}\n\ninterface State {\n}\n\nclass BaseLayout extends React.Component<Props, State> {\n  render() {\n    return (\n        <div className=\"wrap\">\n            <Gnb />\n            <div className=\"content\">\n                {this.props.children}\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default BaseLayout;","import React from \"react\";\nimport { PostAuthor } from \"@Types/model/Posts\";\n\ninterface Props {\n    author: PostAuthor;\n    vendorType: string;\n}\n\ninterface State {\n\n}\n\nexport default class Profile extends React.Component<Props, State> {\n    render() {\n        const { author, vendorType } = this.props;\n        return (\n            <footer className={\"profile\"}>\n                <div className={\"profile-image\"}>\n                    <div>\n                        <img src={author.profileImageUrl} />\n                    </div>\n                    <div className={\"vendor-image\"}>\n                        {\n                            vendorType === \"TIKTOK\" &&\n                                <img src=\"/images/logo_tiktok@3x.png\" />\n                        }\n                        {\n                            vendorType === \"INSTAGRAM\" &&\n                            <img src=\"/images/logo_insta@3x.png\" />\n                        }\n                    </div>\n                </div>\n                <div className={\"profile-desc\"}>\n                    <div className={\"profile-name\"}>{author.name}</div>\n                    <div className={\"post-date\"}>2020.02.02</div>\n                </div>\n            </footer>\n        )\n    }\n}\n","import React from \"react\";\nimport { PostAuthor, PostContent } from \"@Types/model/Posts\";\nimport \"./Post.less\";\nimport Profile from \"./Profile\";\nimport styled from \"styled-components\";\n\ninterface State {\n    onLoad: boolean;\n}\n\ninterface Props {\n    onClick?: () => void;\n    postType?: string;\n    vendorType: string;\n    title: string;\n    content: PostContent;\n    author: PostAuthor;\n}\n\ninterface PostImageProps {\n    backgroundImage: string;\n}\n\nconst PostImage = styled.div<PostImageProps>`\n            &:before {\n                background-image : ${props => `url(${props.backgroundImage})`};\n            }\n        `;\n\nexport default class Post extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            onLoad: false\n        };\n    }\n\n    handleOnClick = () => {\n        this.props.onClick && this.props.onClick();\n    };\n\n    onLoadImage = () => {\n        this.setState({\n            onLoad: true\n        });\n    };\n\n    render() {\n        const { postType, title, vendorType, content, author } = this.props;\n        const { onLoad } = this.state;\n\n        return (\n            <div className={`post ${postType ? postType : \"\"}`} onClick={this.handleOnClick}>\n                <PostImage className={\"post-image\"} backgroundImage={content.thumbnailImageUrl}>\n                    <div className={\"post-image-background\"}>\n                        <img onLoad={this.onLoadImage}\n                            src={content.thumbnailImageUrl}\n                            alt={title} />\n                    </div>\n                </PostImage>\n                <Profile author={author} vendorType={vendorType} />\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport PrevIconUrl from \"./svg/ic-arrow-previous.svg\";\nimport NextIconUrl from \"./svg/ic-arrow-next.svg\";\nimport \"./Arrow.less\";\n\ninterface Props {\n    onClick?: () => void;\n    type: \"prev\" | \"next\";\n    className?: string;\n    width?: number | string;\n    height?: number | string;\n    hide?: boolean;\n}\n\ninterface States {\n\n}\n\nexport default class Arrow extends React.Component<Props, States> {\n    handleOnClick = () => {\n        this.props.onClick && this.props.onClick();\n    };\n\n    render() {\n        const { type, width, height, className = \"\", hide = false } = this.props;\n\n        return (\n            <div>\n                <button className={`arrow arrow-${type} ${hide && \"arrow-hide\"} ${className}`} onClick={this.handleOnClick}>\n                    { type === \"prev\" && <img src={PrevIconUrl} alt={\"prev\"} /> }\n                    { type === \"next\" && <img src={NextIconUrl} alt={\"next\"} /> }\n                </button>\n            </div>\n        );\n    }\n}\n","import \"./Home.less\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RootState } from \"@Types/RootState\";\nimport Posts from \"@Types/model/Posts\";\nimport { changePostPosition, getPostList } from \"@Redux/actions/postAction\";\nimport Post from \"@Components/post/Post\";\nimport Arrow from \"@Components/arrow/Arrow\";\n\ninterface StateProps {\n    posts: Posts[];\n    currentPosition: number;\n}\n\ninterface DispatchProps {\n}\n\ninterface OwnProps {\n}\n\ninterface Props extends StateProps, DispatchProps, OwnProps {\n    children: JSX.Element | JSX.Element[];\n    getPostList: Function;\n    changePostPosition: Function;\n}\n\ninterface State {\n}\n\nclass Home extends React.Component<Props, State> {\n    componentDidMount(): void {\n        this.props.getPostList();\n    }\n\n    render() {\n        const { posts, currentPosition } = this.props;\n        const { changePostPosition } = this.props;\n\n        return (\n            <div className={\"home-post\"}>\n                {\n                    posts && posts.length > 0 &&\n                        <Post\n                            title={posts[currentPosition].title}\n                            content={posts[currentPosition].content}\n                            author={posts[currentPosition].author}\n                            vendorType={posts[currentPosition].vendorType}\n                        />\n                }\n                <div className={\"home-arrow\"}>\n                        <Arrow type={\"prev\"} hide={currentPosition === 0} onClick={() => changePostPosition(currentPosition - 1)} />\n                        <Arrow type={\"next\"} hide={currentPosition === posts.length} onClick={() => changePostPosition(currentPosition + 1)} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: RootState): StateProps => {\n    return {\n        posts: state.postState.posts,\n        currentPosition: state.postState.currentPosition\n    }\n};\n\nconst mapDispatchToProps = {\n    getPostList: getPostList,\n    changePostPosition: changePostPosition\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, RootState>(mapStateToProps, mapDispatchToProps)(Home);\n","import React from \"react\";\nimport CloseIconUrl from \"./svg/ic-x.svg\";\nimport \"./Close.less\";\n\ninterface Props {\n    onClick?: () => void;\n}\n\ninterface States {\n\n}\n\nexport default class Close extends React.Component<Props, States> {\n    handleOnClick = () => {\n        this.props.onClick && this.props.onClick();\n    };\n\n    render() {\n        return (\n            <button className={\"icon-close\"} onClick={this.handleOnClick}>\n                <img src={CloseIconUrl}  alt={\"close\"}/>\n            </button>\n        )\n    }\n}","import \"./Discover.less\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RootState } from \"@Types/RootState\";\nimport { getPostList, changeDiscoverPostOpenState, changePostPosition } from \"@Redux/actions/postAction\";\nimport Post from \"@Components/post/Post\";\nimport Posts from \"@Types/model/Posts\";\nimport Masonry from \"react-masonry-css\";\nimport Close from \"@Components/close/Close\";\nimport Arrow from \"@Components/arrow/Arrow\";\n\ninterface StateProps {\n    posts: Posts[];\n    isPostOpen: boolean;\n    currentPosition: number;\n}\n\ninterface DispatchProps {\n}\n\ninterface OwnProps {\n}\n\ninterface Props extends StateProps, DispatchProps, OwnProps {\n    children: JSX.Element | JSX.Element[];\n    getPostList: Function;\n    changeDiscoverPostOpenState: Function;\n    changePostPosition: Function;\n}\n\ninterface State {\n}\n\nconst breakpointColumn = {\n    default: 6,\n    1200: 5,\n    1000: 4,\n    794: 3\n};\n\nconst breakpointColumnOpen = {\n    default: 3,\n    1000: 2,\n    794: 1\n};\n\nclass Discover extends React.Component<Props, State> {\n    postClick(position: number): void {\n        this.props.changeDiscoverPostOpenState(true, position);\n    }\n\n    postClose(): void {\n        this.props.changeDiscoverPostOpenState(false);\n    }\n\n    componentDidMount(): void {\n        const { posts, getPostList } = this.props;\n        if (posts.length === 0) {\n            getPostList();\n        }\n    }\n\n    render() {\n        const { posts, isPostOpen, currentPosition } = this.props;\n        const { changePostPosition } = this.props;\n\n        return (\n            <div className={\"discover-post\"}>\n                <Masonry\n                    breakpointCols={isPostOpen ? breakpointColumnOpen : breakpointColumn}\n                    className={\"discover-post-grid\"}\n                    columnClassName={\"grid-column\"}>\n                    {\n                        posts && posts.length > 0 &&\n                        posts.map((it, i) =>\n                            <Post\n                                key={i}\n                                postType={\"overlay\"}\n                                title={it.title}\n                                content={it.content}\n                                author={it.author}\n                                vendorType={it.vendorType}\n                                onClick={() => this.postClick(i)}\n                            />)\n                    }\n                </Masonry>\n                {\n                    isPostOpen && <div className={\"post-detail\"}>\n                        <div className={\"post-detail-header\"}>\n                            <Close onClick={() => this.postClose()} />\n                            <div className={\"post-detail-arrow\"}>\n                                <Arrow type={\"prev\"} hide={currentPosition === 0} onClick={() => changePostPosition(currentPosition - 1)} />\n                                <Arrow type={\"next\"} hide={currentPosition === posts.length} onClick={() => changePostPosition(currentPosition + 1)} />\n                            </div>\n                        </div>\n                        <Post\n                            title={posts[currentPosition].title}\n                            content={posts[currentPosition].content}\n                            author={posts[currentPosition].author}\n                            vendorType={posts[currentPosition].vendorType}\n                        />\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state: RootState): StateProps => {\n    return {\n        posts: state.postState.posts,\n        currentPosition: state.postState.currentPosition,\n        isPostOpen: state.postState.isPostOpen\n    }\n};\n\nconst mapDispatchToProps = {\n    getPostList: getPostList,\n    changeDiscoverPostOpenState: changeDiscoverPostOpenState,\n    changePostPosition: changePostPosition\n};\n\nexport default connect<StateProps, DispatchProps, OwnProps, RootState>(mapStateToProps, mapDispatchToProps)(Discover);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport BaseLayout from \"./containers/layout/BaseLayout\";\nimport Home from \"./containers/home/Home\";\nimport Discover from \"./containers/discover/Discover\";\nimport { ERouteUrl } from \"./config/constants/routeUrls\";\n// import Post from \"./containers/post/Post\";\n\nclass Routes extends Component<any, any> {\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    <BaseLayout>\n                        <Route exact path={ERouteUrl.HOME} component={Home}/>\n                        <Route exact path={ERouteUrl.DISCOVER} component={Discover}/>\n                    </BaseLayout>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default Routes;\n","import { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\"\nimport { applyMiddleware, createStore } from \"redux\"\nimport { persistStore } from \"redux-persist\"\nimport middlewares, { sagaMiddleware } from \"../../reduxs/middlewares/index\"\n\nimport reducers from \"../../reduxs/reducers\"\nimport sagas from \"../../reduxs/sagas\"\nimport env from \"../env/index\";\n\nexport function configureStore() {\n  const composeEnhancers = composeWithDevTools({ name: \"react-boilerplate\" });\n\n  // Apply these middlewares only for dev mode\n  if (env.NODE_ENV.isDevelopment()) {\n  }\n\n  const store = createStore(reducers, composeEnhancers(applyMiddleware(...middlewares)));\n\n  sagaMiddleware.run(sagas);\n  const persistor = persistStore(store, undefined);\n\n  return {\n    store,\n    persistor\n  }\n}\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { configureStore } from \"./config/initializers/store\";\nimport Routes from \"./routes\";\n\nconst { store, persistor } = configureStore();\n\nconst App = () => (\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <Routes/>\n    </PersistGate>\n  </Provider>\n);\n\n// @ts-ignore\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { initApiInterceptor } from \"./services/apis/interceptor\";\nimport \"./index.less\";\nimport App from \"./App\";\n\ninitApiInterceptor();\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);\n","/**\n * PROFILE: local|develop|perf|production\n * 실제 서비스하는 환경\n */\nexport enum PROFILE {\n  LOCAL = \"local\",\n  DEVELOP = \"develop\",\n  PERF = \"perf\",\n  PRODUCTION = \"production\",\n}\n\n/**\n * NODE_ENV: development|production\n * 빌드환경 (dev-server or build 구분)\n */\nexport enum NODE_ENV {\n  DEVELOPMENT = \"development\",\n  PRODUCTION = \"production\",\n}\n\nconst nodeEnvValue = (process.env.NODE_ENV as NODE_ENV);\nconst profileValue = (process.env.PROFILE as PROFILE);\nconst assetUrlValue = (process.env.ASSET_URL as string);\nconst publicUrlValue = (process.env.PUBLIC_URL as string);\n\nconsole.log(\"NODE_ENV :\", nodeEnvValue);\nconsole.log(\"PROFILE :\", profileValue);\n\nconst staticFile = require(`./${profileValue}`);\nexport default {\n  ...staticFile,\n\n  /**\n   * NODE_ENV: development|production\n   * 빌드환경 (dev-server or build 구분)\n   */\n  NODE_ENV: {\n    getValue(): NODE_ENV { return nodeEnvValue },\n    isDevelopment(): boolean { return nodeEnvValue === NODE_ENV.DEVELOPMENT },\n    isProduction():  boolean { return nodeEnvValue === NODE_ENV.PRODUCTION },\n  },\n\n  /**\n   * PROFILE: local|develop|perf|production\n   * 실제 서비스하는 환경\n   */\n  PROFILE: {\n    getValue(): PROFILE { return profileValue },\n    isDevelopment(): boolean { return profileValue === PROFILE.DEVELOP },\n    isProduction():  boolean { return profileValue === PROFILE.PRODUCTION },\n  },\n\n  /**\n   * 배포 시 빌드 번호\n   */\n  ASSET_URL: assetUrlValue,\n\n  /**\n   * 배포 시 빌드 후 붙는 리소스 prefix 경로 (예: /resources)\n   */\n  PUBLIC_URL: publicUrlValue,\n};\n","module.exports = __webpack_public_path__ + \"locals/media/logo.7f619d2b.svg\";","module.exports = __webpack_public_path__ + \"locals/media/ic-arrow-previous.af88a4c5.svg\";","module.exports = __webpack_public_path__ + \"locals/media/ic-arrow-next.9b9d6a7d.svg\";","module.exports = __webpack_public_path__ + \"locals/media/ic-x.54710614.svg\";","var map = {\n\t\"./\": 18,\n\t\"./develop\": 45,\n\t\"./develop.json\": 45,\n\t\"./index\": 18,\n\t\"./index.ts\": 18,\n\t\"./local\": 46,\n\t\"./local.json\": 46,\n\t\"./production\": 47,\n\t\"./production.json\": 47\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89;"],"sourceRoot":""}